---
title: Usage with Frameworks | DateGallery | Docs
layout: layouts/docs.njk
permalink: /docs/date-gallery/usage-with-frameworks/
parent: 'date-gallery'
current: 'date-gallery-frameworks'
description: "How to use the DateGallery with frameworks such as React, Angular or Vue."
keywords: "DateGallery, DateGallery React, DateGallery Vue, DateGallery Angular"
---

<article>
  <h1>DateGallery usage with Frameworks</h1>

  <nav class="2xl:fixed 2xl:top-24 2xl:right-2 2xl:w-[270px]" role="doc-toc" data-no-highlight="true">
    <em>Table of contents</em>
    <ol class="list-decimal m-2 mb-4">
      <li class="ml-8">
        <a href="#in-general" class="text-purple-600 underline">In general</a>
      </li>
      <li class="ml-8">
        <a href="#react" class="text-purple-600 underline">React</a>
      </li>
      <li class="ml-8">
        <a href="#vue" class="text-purple-600 underline">Vue</a>
      </li>
      <li class="ml-8">
        <a href="#angular" class="text-purple-600 underline">Angular</a>
      </li>
      <li class="ml-8">
        <a href="#svelte" class="text-purple-600 underline">Svelte</a>
      </li>
      <li class="ml-8">
        <a href="#alpine" class="text-purple-600 underline">Alpine</a>
      </li>
    </ol>
  </nav>

  <h2 id="in-general"><a href="#in-general">1. In general</a></h2>

  <p>
    The <a href="/api/core/dategallery/" class="underline high">DateGallery</a> 
    component works well with any framework which supports reactivity.
  </p>

  <p>
    When using frameworks you will not need to subscribe to changes
    and observe the DateGallery manually. This allows you to use the
    DateGallery more declaratively. Using the DateGallery declaratively 
    results in easier to understand code.
  </p>

  <h2 id="react"><a href="#react">2. React</a></h2>

  <p>
    When using React you should use the 
    <a href="https://www.npmjs.com/package/@uiloos/react" target="_blank" rel="noopener noreferrer" class="high underline">@uiloos/react</a>
    library. It contains the <a href="/api/react/usedategallery/" class="high underline">useDateGallery</a>
    hook which provides you an DateGallery, without the need to subscribe 
    to it.
  </p>

  <h2 id="vue"><a href="#vue">3. Vue</a></h2>

  <p>
    In Vue you should use the 
    <a href="https://www.npmjs.com/package/@uiloos/vue" target="_blank" rel="noopener noreferrer" class="high underline">@uiloos/vue</a>
    library. It contains the <a href="/api/vue/usedategallery/" class="high underline">useDateGallery</a>
    composable which provides you an DateGallery, without the need to subscribe 
    to it.
  </p>

  <p>
    When you spread your use of the DateGallery across multiple components,
    you might have to tell Vue that the DateGallery has changed, so Vue 
    picks up on the changes.
  </p>

  <p>
    In the examples a <span class="high">tracker</span> prop is added
    to each component that also has the DateGallery as a prop. The 
    tracker is a number that increments when the DateGallery changes.
    This tickles Vue into re-rendering the component.
  </p>

  <p>
    The technical reason for this: Vue has an API called <span class="high">shallowRef</span>
    which you can combine with <span class="high">triggerRef</span> to create a 
    ref that a library author (such as uiloos) can then use to store state 
    outside of Vue. Unfortunately for us here at uiloos, <span class="high">triggerRef</span>
    only works one level deep.
  </p>

  <h2 id="angular"><a href="#angular">4. Angular</a></h2>

  <p>
    If you are using Angular there is no need to include an extra library.
    As long as you use DateGallery inside of a <span class="high">@Component</span> 
    it will pick up on changes automatically.
  </p>

  <p>
    When passing around the DateGallery to sub components via <span class="high">@Input</span> , Angular will not  re-render the sub-components when the DateGallery changes. 
  </p>  
  
  <p>The solution 
    used in the example is to also subscribe to the DateGallery in the sub-components
    for the specific events that they are interested in, using the 
    <a href="/api/core/createdategallerysubscriber/" class="high underline">createDateGallerySubscriber</a>
    subscriber creator function.
  </p>

  <h2 id="svelte"><a href="#svelte">5. Svelte</a></h2>

  <p>
    For Svelte you should use the 
    <a href="https://www.npmjs.com/package/@uiloos/svelte" target="_blank" rel="noopener noreferrer" class="high underline">@uiloos/svelte</a>
    library. It contains the <a href="/api/svelte/createdategallerystore/" class="high underline">createDateGalleryStore</a>
    function which creates a readable DateGallery store, so you do not need to subscribe to it manually.
  </p>
  
  <h2 id="alpine"><a href="#alpine">6. Alpine</a></h2>

  <p>
    With Alpine we feel that it is best to fallback to vanilla js. The 
    reason for this is the level of JavaScript and HTML required to 
    create truly reusable components in Alpine is not worth the effort.
  </p>

  <p>
    We feel Alpine works best when you have HTML that you want to enrich.
    The HTML should to be in the drivers seat. In the case of a datepicker 
    or calendar you want JavaScript to be in the drivers seat. 
  </p>

  <p>
    We advise checking out the vanilla examples that use web components.
  </p>

  <a 
    class="card" 
    href="/docs/date-gallery/examples/"
  >
    <div>
      <div class="text-normal font-medium mb-1">Examples</div>
      <div class="text-sm">See the DateGallery in action with easy to copy examples</div>
    </div>
    <svg class="w-4 h-4 fill-current text-blue-600 shrink-0 ml-6" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
      <path d="M9.3 14.7l-1.4-1.4L12.2 9H0V7h12.2L7.9 2.7l1.4-1.4L16 8z"></path>
    </svg>
  </a>
</article>